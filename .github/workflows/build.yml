name: Pre-checks

on: workflow_dispatch

concurrency:
  group: build-main-${{ github.event.repository.name }}
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always

jobs:
  pre-checks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  create-release:
    runs-on: ubuntu-latest
    needs: pre-checks

    steps:
      - uses: actions/checkout@v3
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.1.0
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.previoustag.outputs.tag }}
          release_name: Release ${{ steps.previoustag.outputs.tag }}
          draft: true
          prerelease: true 

  bundle-linux:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo bundle --release
      - name: Tar bundle
        run: |
          artifact_name=$(ls target/release/bundle/deb/)
          tar -czvf $artifact_name.tar.gz target/release/bundle/deb/$artifact_name
          echo "ARTIFACT_NAME=$artifact_name.tar.gz" >> $GITHUB_ENV
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.ARTIFACT_NAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/gzip

  bundle-windows:
    needs: create-release
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Get cargo wix
        run: cargo install cargo-wix
      - name: Build
        run: cargo wix -v
      - name: Get artifact name
        run: |
          artifact_name=$(dir -n -file target/wix/*.msi)
          echo "WINDOWS_ARTIFACT_NAME=$artifact_name" >> $GITHUB_ENV
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/wix/${{ env.WINDOWS_ARTIFACT_NAME }}
          asset_name: ${{ env.WINDOWS_ARTIFACT_NAME }}
          asset_content_type: application/gzip